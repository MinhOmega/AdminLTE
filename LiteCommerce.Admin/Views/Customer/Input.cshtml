@model LiteCommerce.DomainModels.Customer
@{

}
<div class="box box-info">
    <div class="box-body">
        <form role="form" action="~/Customer/Input" method="post" name="register">
            <div class="box-body row">
                <div class="col-sm-6">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">CustomerID</label>
                                @Html.TextBox("CustomerID", Model.CustomerID, new { placeholder = "Enter CustomerID", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Company Name</label>
                                @Html.TextBox("CompanyName", Model.CompanyName, new { placeholder = "Enter Company Name", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Contact Name</label>
                                @Html.TextBox("ContactName", Model.ContactName, new { placeholder = "Enter Contact Name", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Contact Title</label>
                                @Html.TextBox("ContactTitle", Model.ContactTitle, new { placeholder = "Enter Contact Title", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Phone number</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                                    @Html.TextBox("Phone", Model.Phone, new { placeholder = "Enter Phone", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Fax</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-fax"></i></span>
                                    @Html.TextBox("Fax", Model.Fax, new { placeholder = "Enter Fax", @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">

                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">Country</label>
                                <select class="form-control" name="Country" id="Country">
                                    <option value="null">-- Choose Country --</option>
                                    @foreach (var country in SelectListHelper.ListOfCountries())
                                    {
                                        if (country.CountryName == Model.Country)
                                        {
                                            <option value="@country.CountryName" selected="selected">@country.CountryName</option>
                                        }
                                        else
                                        {
                                            <option value="@country.CountryName">@country.CountryName</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label for="exampleInputPassword1">City</label>
                                @Html.TextBox("City", Model.City, new { placeholder = "Enter City", @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Address</label>
                        @Html.TextBox("Address", Model.Address, new { placeholder = "Enter Address", @class = "form-control" })
                    </div>
                </div>
            </div>
            @Html.ValidationSummary()
            <!-- /.box-body -->

            <div class="box-footer pull-right">
                <button type="submit" id="submit" name="submit" class="btn btn-primary"><i class="fa fa-save"></i>Save</button>
                <button type="reset" class="btn btn-white"><i class="fa fa-reset"></i>Cancel</button>
            </div>
        </form>
    </div>
</div>
<script type="text/javascript">
    var input = document.forms['register'].getElementsByTagName('input');
    var run_onchange = false;
    function valid() {
        var errors = false;
        var vnf_regex = /((086|096|097|098|032|033|035|034|036|037|038|039|088|091|094|083|084|085|081|082|089|090|093|070|079|077|075|078|092|056|058|099|059)+([0-9]{7})\b)/g;

        for (var i = 0; i < input.length; i++) {
            var value = input[i].value;
            var id = input[i].getAttribute('id');
            // creat spam save error info
            var span = document.createElement('span');

            // if span had exist -> remove
            var p = input[i].parentNode;
            if (p.lastChild.nodeName == 'SPAN') {
                p.removeChild(p.lastChild);
            }
            //check null
            if (value === '' & (id === 'CustomerID')) {
                span.innerHTML = 'This element is required';

            } else {
                if (id === 'CustomerID') {
                    if (value.length > 5) {
                        span.innerHTML = 'Max length of CustomerID is 5 character';
                    }
                }
                //check another error
                if (id === 'CompanyName') {
                    if (value.length > 100) {
                        span.innerHTML = 'Max length of Company Name is 100 character';
                    }
                }
                if (id === 'ContactName') {
                    if (value.length > 30) {
                        span.innerHTML = 'Max length of Contact Name is 30 character';
                    }
                }
                if (id === 'ContactTitle') {
                    if (value.length > 30) {
                        span.innerHTML = 'Max length of Contact Title is 30 character';
                    }
                }
                if (id === 'Address') {
                    if (value.length > 60) {
                        span.innerHTML = 'Max length of Address is 60 character';
                    }
                }
                if (id === 'City') {
                    if (value.length > 15) {
                        span.innerHTML = 'Max length of City is 15 character';
                    }
                }
                if (id === 'Phone') {
                    if (vnf_regex.test(value) == true) {

                    } else {
                        span.innerHTML = 'Wrong format ! You must enter the correct phone number according to Vietnam standards (with 10 numbers)';

                    }
                }
                if (id === 'Fax') {
                    if (vnf_regex.test(value) == true) {

                    } else {
                        span.innerHTML = 'Wrong format ! You must enter the correct fax number according to Vietnam standards (with 10 numbers)';

                    }
                }
            }
            //neu co loi chen span vao ho so chay onchange, submit return false, highlight border
            if (span.innerHTML !== '') {
                input[i].parentNode.appendChild(span);
                errors = true;
                run_onchange = true;
                input[i].style.border = '1px solid #c6807b';
                input[i].style.background = '#fffcf9';
            }
        }

        if (errors == false) {
        }
        return !errors;
    }

    //chay ham valid()
    var register = document.getElementById('submit');
    register.onclick = function () {
        return valid();
    }

    // Kiểm tra lỗi với sự kiện onchange -> gọi lại hàm valid()
    for (var i = 0; i < input.length; i++) {
        var id = input[i].getAttribute('id');
        input[i].onchange = function () {
            if (run_onchange == true) {
                this.style.border = '1px solid #999';
                this.style.background = '#fff';
                valid();
            }
        }
    }// end for
</script>